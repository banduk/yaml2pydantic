name: CI

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Create and activate virtual environment
        run: |
          uv venv
          source .venv/bin/activate
          which python
          python --version
          pip list

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          make test-cov
          coverage xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-lint-${{ hashFiles('**/pyproject.toml') }}

      - name: Create and activate virtual environment
        run: |
          uv venv
          source .venv/bin/activate
          which python
          python --version
          pip list

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Run linting
        run: |
          source .venv/bin/activate
          make lint
