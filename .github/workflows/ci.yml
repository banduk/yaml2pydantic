name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Create and activate virtual environment
        run: |
          uv venv
          source .venv/bin/activate
          which python
          python --version
          pip list

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Run tests
        run: |
          source .venv/bin/activate
          python -m pytest --cov=yaml2pydantic --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Create and activate virtual environment
        run: |
          uv venv
          source .venv/bin/activate
          which python
          python --version
          pip list

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Run linting
        run: |
          source .venv/bin/activate
          python -m ruff check .
          python -m black --check .
          python -m isort --check-only .
          python -m mypy .
